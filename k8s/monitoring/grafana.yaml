apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
        - name: download-community-dashboards
          image: alpine:3.19
          command:
            - sh
            - -exc
            - |
              apk add --no-cache curl jq
              mkdir -p /dashboards
              set -x
              for ID in 1860 6417; do
                INFO_URL="https://grafana.com/api/dashboards/${ID}"
                REV=$(curl -fsSL "$INFO_URL" | jq -r '.revisions[-1].revision') || REV=""
                if [ -n "$REV" ] && [ "$REV" != "null" ]; then
                  curl -fsSL "https://grafana.com/api/dashboards/${ID}/revisions/${REV}/download" -o "/dashboards/gnet-${ID}.json" || true
                fi
              done
              ls -l /dashboards || true
          volumeMounts:
            - name: grafana-dashboards-community
              mountPath: /dashboards
      containers:
        - name: grafana
          image: grafana/grafana:10.2.3
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: qwe123qwe
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-dashboards-community
              mountPath: /var/lib/grafana/dashboards-community
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-dashboards-community
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  type: ClusterIP

