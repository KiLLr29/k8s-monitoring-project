apiVersion: v1
kind: Service
metadata:
  name: drupal
  namespace: cms
  labels:
    app: drupal
spec:
  type: ClusterIP
  selector:
    app: drupal
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal
  namespace: cms
  labels:
    app: drupal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drupal
  template:
    metadata:
      labels:
        app: drupal
    spec:
      securityContext:
        fsGroup: 33        # www-data
      initContainers:
        - name: init-perms
          image: busybox:1.36
          command: ['sh','-c']
          args:
            - |
              mkdir -p /var/www/html/sites/default/files && \
              chown -R 33:33 /var/www/html/sites/default
          volumeMounts:
            - name: drupal-data
              mountPath: /var/www/html/sites/default
              subPath: sites-default
      containers:
        - name: drupal
          image: drupal:10-apache
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: drupal-data
              mountPath: /var/www/html/sites/default
              subPath: sites-default
      volumes:
        - name: drupal-data
          persistentVolumeClaim:
            claimName: drupal-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-data
  namespace: cms
  labels:
    app: drupal
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
